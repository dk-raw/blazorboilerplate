@inherits ProfilePage
@page "/account/profile"
@attribute [Authorize]

<h1>@L["User Profile"]</h1>
<p>User profile management.</p>
@if (userViewModel == null)
{
    <LoadingBackground></LoadingBackground>
}
else
{
    <div class="form-group">
        <MudButton Type="submit" form="mainForm" Variant="Variant.Filled" Color="Color.Primary">@L["Save"]</MudButton>
        @if (userViewModel.HasPassword)
        {
            <MudButton StartIcon="@Icons.Filled.RotateRight" OnClick="@(() => OpenUpdatePasswordDialog())" Label=@L["Change Password"] Style="margin-left: 10px"></MudButton>
        }
        @if (userViewModel.HasAuthenticator)
        {
            <MudButton StartIcon="@Icons.Filled.RotateRight" OnClick="@(() => DisableAuthenticator())" Label=@L["ResetAuthenticator"] Style="margin-left: 10px"></MudButton>
        }
    </div>
    <EditForm id="mainForm" Model="@userViewModel" OnValidSubmit="@UpdateUser">
        <FluentValidationValidator />
        <ValidationSummary />
        <fieldset>
            <div class="form-group">
                <MudTextField @bind-Value="@userViewModel.UserName" Label=@L["UserName"] AdornmentIcon="@Icons.Material.Filled.Person" Adornment="Adornment.End" FullWidth="true" Required="true" ReadOnly="true"></MudTextField>
            </div>
            <div class="form-group">
                <MudTextField @bind-Value="@userViewModel.Email" Label="Email" AdornmentIcon="@Icons.Material.Outlined.Mail" Adornment="Adornment.End" FullWidth="true" Required="true"></MudTextField>
            </div>
            <div class="form-group">
                <MudTextField @bind-Value="@userViewModel.FirstName" Label=@L["FirstName"] FullWidth="true"></MudTextField>
            </div>
            <div class="form-group">
                <MudTextField @bind-Value="@userViewModel.LastName" Label=@L["LastName"] FullWidth="true"></MudTextField>
            </div>
            <div class="form-group">
                <strong>@L["Roles"]</strong><br />
                <MudChipSet>
                    @foreach (var role in userViewModel.Roles)
                    {
                        <MudChip Text="@role"></MudChip>
                    }
                </MudChipSet>
            </div>
        </fieldset>
    </EditForm>
    @if (userViewModel.TwoFactorEnabled)
    {
        <div class="form-group">
            <MudSwitch @bind-Checked="@TwoFactorEnabled" Label=@L["TwoFactorAuthentication"] />
        </div>
        @if (userViewModel.BrowserRemembered)
        {
            <div class="form-group">
                <MudSwitch @bind-Checked="@BrowserRemembered" Label=@L["BrowserRemembered"] />
            </div>
        }
        if (userViewModel.RecoveryCodes != null)
        {
            <div class="form-group">
                <MudChipSet>
                    @foreach (var rcode in userViewModel.RecoveryCodes)
                    {
                        <MudChip Text="@rcode"></MudChip>
                    }
                </MudChipSet>
            </div>
        }
        else
        {
            <div class="form-group">
                <span>@L["RecoveryCodesLeft"]</span> @userViewModel.CountRecoveryCodes
            </div>
        }
    }
    else
    {
        <h3>@L["TwoFactorAuthentication"]</h3>
        <p>
            Download a two-factor authenticator app like Microsoft Authenticator or Google Authenticator.
        </p>
        <p>Scan the QR Code or enter this key <kbd>@userViewModel.SharedKey</kbd> into your two factor authenticator app. Spaces and casing do not matter.</p>
        <img src="@($"https://chart.googleapis.com/chart?chs=200x200&chld=M|0&cht=qr&chl={userViewModel.AuthenticatorUri}")" />
        <p>
            Once you have scanned the QR code or input the key above, your two factor authentication app will provide you
            with a unique code. Enter the code in the confirmation box below.
        </p>
        <MudTextField @bind-Value="@authenticatorVerificationCodeViewModel.Code" Label=@L["Code"] FullWidth="true"></MudTextField>
        <MudButton OnClick="@EnableAuthenticator">@L["VerifyCode"]</MudButton>
    }

    <MudDialog @bind-IsVisible="@updatePasswordDialogOpen">
        <TitleContent>Password Update for @userViewModel.UserName</TitleContent>
        <DialogContent>
            <EditForm Model="@updatePasswordViewModel" OnValidSubmit="@UpdatePassword">
                <FluentValidationValidator />
                <ValidationSummary />
                <fieldset>
                    <div class="form-group">
                        <MudTextField @bind-Value="@updatePasswordViewModel.CurrentPassword" Label=@L["CurrentPassword"] AdornmentIcon="@Icons.Material.Outlined.Lock" Adornment="Adornment.End" FullWidth="true" Required="true" InputType="InputType.Password"></MudTextField>
                    </div>
                    <div class="form-group">
                        <MudTextField @bind-Value="@updatePasswordViewModel.NewPassword" Label=@L["NewPassword"] AdornmentIcon="@Icons.Material.Outlined.Lock" Adornment="Adornment.End" FullWidth="true" Required="true" InputType="InputType.Password"></MudTextField>
                    </div>
                    <div class="form-group">
                        <MudTextField @bind-Value="@updatePasswordViewModel.NewPasswordConfirm" Label=@L["Password Confirmation"] AdornmentIcon="@Icons.Material.Outlined.Lock" Adornment="Adornment.End" FullWidth="true" Required="true" InputType="InputType.Password"></MudTextField>
                    </div>
                </fieldset>
            </EditForm>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@(e => { updatePasswordDialogOpen = false; })">@L["Cancel"]</MudButton>
            <MudButton OnClick="@UpdatePassword">@L["Update Password"]</MudButton>
        </DialogActions>
    </MudDialog>

}
@code {
    
}

@inherits LoginPage
@page "/account/login"

@layout LoginLayout

<AuthorizeView Context="AuthorizeContext">
    <Authorized>
        <LoadingBackground>
            <label>@L["Loading"]</label>
        </LoadingBackground>
    </Authorized>
    <NotAuthorized>
        @if (loginViewModel?.EnableLocalLogin == true)
        {
            <MudCard Elevation="25">
                <MudCardHeader>
                    <div class="hidden-mdc-down">
                        <MudIconButton Icon="@Icons.Filled.Home" Class="float-left" Link="/" />
                    </div>
                    <div class="logo">
                        <a href="/" title="@appState.AppName Home"><img src="_content/BlazorBoilerplate.Theme.MudBlazor/images/logo.svg" style="width:100px;" title="@appState.AppName Home" alt="@appState.AppName" /><br />@appState.AppName</a>
                        <br />
                        <h4>@L["Log in"]</h4>
                    </div>
                </MudCardHeader>
                <MudCardContent>
                    <EditForm Model="@loginViewModel" OnValidSubmit="@SubmitLogin">
                        <FluentValidationValidator />
                        <ValidationSummary />
                        <fieldset>
                            <div class="form-group">
                                <MudTextField AutoFocus="true" @bind-Value="@loginViewModel.UserName" Label=@L["UserName"] AdornmentIcon="@Icons.Material.Filled.Person" Adornment="Adornment.End" FullWidth="true" Required="true" tabindex="1"></MudTextField>
                            </div>
                            <div class="form-group">
                                <MudTextField @bind-Value="@loginViewModel.Password" Label=@L["Password"] AdornmentIcon="@Icons.Material.Outlined.Lock" Adornment="Adornment.End" FullWidth="true" Required="true" InputType="InputType.Password" tabindex="2"></MudTextField>
                            </div>
                            <div class="form-group">
                                <MudButton class="float-right" Type="submit" tabindex="3">@L["Login"]</MudButton>
                                @if (loginViewModel.AllowRememberLogin)
                                {<MudCheckBox @bind-Checked="@loginViewModel.RememberMe" class="filled-in chk-col-blue">@L["Keep me logged in"]</MudCheckBox>}
                            </div>
                        </fieldset>
                    </EditForm>
                    <hr />
                    <div>
                        <MudButton class="float-left" OnClick="@Register">@L["Sign up"]</MudButton>
                    </div>
                </MudCardContent>
            </MudCard>
            <MudExpansionPanels>
                <MudExpansionPanel @bind-Expanded="@forgotPasswordToggle">
                    <TitleContent>
                        @L["Forgot your password?"]
                    </TitleContent>
                    <ChildContent>
                        <EditForm Model="@forgotPasswordViewModel" OnValidSubmit="@ForgotPassword">
                            <FluentValidationValidator />
                            <ValidationSummary />
                            <div class="form-group">
                                <MudTextField @bind-Value="@forgotPasswordViewModel.Email" Label=@L["Email"] AdornmentIcon="@Icons.Material.Outlined.Mail" Adornment="Adornment.End" FullWidth="true" Required="true"></MudTextField>
                            </div>
                            <div class="form-group">
                                <MudButton class="float-right" Type="submit">@L["Submit"]</MudButton>
                            </div>
                        </EditForm>
                    </ChildContent>
                </MudExpansionPanel>
            </MudExpansionPanels>
            @if (loginViewModel.VisibleExternalProviders.Any())
            {
                <br />
                <MudCard>
                    @if (!loginViewModel.EnableLocalLogin)
                    {<div class="hidden-mdc-down">
                            <MudIconButton Icon="@Icons.Filled.Home" Class="float-left" Link="/" />
                        </div>}
                    <div class="logo">
                        @if (!loginViewModel.EnableLocalLogin)
                        {<a href="/" title="@appState.AppName Home"><img src="_content/BlazorBoilerplate.Theme.MudBlazor/images/logo.svg" style="width:100px;" title="@appState.AppName Home" alt="@appState.AppName" /><br />@appState.AppName</a>
                        <br />}
                        <h4>@L["Sign in with"]</h4>
                    </div>
                    <div style="text-align: center">
                        @foreach (var provider in loginViewModel.VisibleExternalProviders)
                        {
                            @switch (provider.AuthenticationScheme)
                            {
                                case "Google":
                                case "Facebook":
                                    <div class="form-group">
                                        <MudButton Style="min-width: 140px;" OnClick="@(() => SignInWith(provider))"><img height="18" src="/images/@(provider.AuthenticationScheme.ToLower()).svg" /></MudButton>
                                    </div>
                                    break;
                                case "Twitter":
                                case "Microsoft":
                                case "Apple":
                                    <div class="form-group">
                                        <MudButton Style="min-width: 140px;" OnClick="@(() => SignInWith(provider))"><img height="18" src="/images/@(provider.AuthenticationScheme.ToLower()).svg" />&nbsp;@provider.DisplayName</MudButton>
                                    </div>
                                    break;
                                default:
                                    <div class="form-group">
                                        <MudButton Style="min-width: 140px;" OnClick="@(() => SignInWith(provider))" Label="@provider.DisplayName" />
                                    </div>
                                    break;
                            }
                        }
                    </div>
                </MudCard>}
            @if (!loginViewModel.EnableLocalLogin && !loginViewModel.VisibleExternalProviders.Any())
            {
                <div class="alert alert-warning">
                    <strong>Invalid login request</strong>
                    There are no login schemes configured for this client.
                </div>
            }
        }
    </NotAuthorized>
</AuthorizeView>
@code {

}

@inherits MultiTenancyPage
@page "/admin/multitenancy"
@attribute [Authorize(Policies.IsAdmin)]
@layout AdminLayout

<TopSection>
    <Breadcrumbs>
        <Breadcrumb Link="/admin" Title=@L["BreadCrumbadmin"] />
        <Breadcrumb Title=@L["BreadCrumbadminmultitenancy"] />
    </Breadcrumbs>
</TopSection>

<h1>@L["Tenants"]</h1>
<p>Tenants Management.</p>

@if (tenants == null)
{
    <LoadingBackground ShowLogoBox="true">
        <label>@L["Loading"]</label>
    </LoadingBackground>
}
else
{
    <MudTable Class="mat-elevation-z5" Items="@tenants" Striped="true">
        <HeaderContent>
            <th><MudButton Icon="@Icons.Filled.Add" Label=@L["New Tenant"] OnClick="@(() => OpenUpsertTenantDialog())"></MudButton></th>
            <th>Id</th>
            <th>Identifier</th>
            <th>@L["Name"]</th>
            <th>ConnectionString</th>
        </HeaderContent>
        <RowTemplate Context="TenantRow">
            <td>
                <div style="width:155px;">
                    <MudIconButton Icon="@Icons.Filled.Edit" OnClick="@(() => OpenUpsertTenantDialog(TenantRow))"></MudIconButton>
                    <MudIconButton Icon="@Icons.Filled.Delete" OnClick="@(() => OpenDeleteTenantDialog(TenantRow))" Disabled="@(TenantRow.Id == BlazorBoilerplate.Constants.Settings.DefaultTenantId)"></MudIconButton>
                </div>
            </td>
            <td><div style="min-width:130px;">@TenantRow.Id</div></td>
            <td>
                <div style="min-width:130px; white-space:nowrap;">
                    @TenantRow.Identifier
                    @if (TenantRow.Id != BlazorBoilerplate.Constants.Settings.DefaultTenantId)
                        {
                        <MudIconButton Link="@GetTenantUri(TenantRow)" Target="_blank" Icon="@Icons.Filled.Link" />
                        }
                </div>
            </td>
            <td><div style="min-width:130px;">@TenantRow.Name</div></td>
            <td><div style="min-width:130px;">@TenantRow.ConnectionString</div></td>
        </RowTemplate>
    </MudTable>
}

<MudDialog @bind-IsVisible="@isUpsertTenantDialogOpen">
    <TitleContent>
        @labelUpsertDialogTitle
    </TitleContent>
    <DialogContent>
        <EditForm Model="@currentTenant">
            <FluentValidationValidator />
            <ValidationSummary />
            <fieldset>
                <div class="form-group">
                    <MudTextField @bind-Value="@currentTenant.Id" Disabled="@isCurrentTenantKeyReadOnly" Label="Id" AdornmentIcon="@Icons.Filled.Description" Adornment="Adornment.End" FullWidth="true" Required="true"></MudTextField>
                </div>
                <div class="form-group">
                    <MudTextField @bind-Value="@currentTenant.Identifier" Disabled="@(currentTenant.Id == BlazorBoilerplate.Constants.Settings.DefaultTenantId)" Label="Identifier" AdornmentIcon="@Icons.Filled.Description" Adornment="Adornment.End" FullWidth="true"></MudTextField>
                </div>
                <div class="form-group">
                    <MudTextField @bind-Value="@currentTenant.Name" Label=@L["Name"] AdornmentIcon="@Icons.Filled.Description" Adornment="Adornment.End" FullWidth="true" Required="true"></MudTextField>
                </div>
                <div class="form-group">
                    <MudTextField @bind-Value="@currentTenant.ConnectionString" Label="ConnectionString" AdornmentIcon="@Icons.Filled.Description" Adornment="Adornment.End" FullWidth="true" TextArea="true"></MudTextField>
                </div>
            </fieldset>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@CancelChanges">@L["Cancel"]</MudButton>
        <MudButton OnClick="@UpsertTenant">@labelUpsertDialogOkButton</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="@isDeleteTenantDialogOpen" Style="z-index:100">
    <TitleContent><MudIcon Icon="@Icons.Filled.Warning"></MudIcon> @L["Confirm Delete"]</TitleContent>
    <DialogContent>
        Are you sure you want to delete the Tenant "@currentTenant.Name" ?
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(e => { isDeleteTenantDialogOpen = false; })">@L["Cancel"]</MudButton>
        <MudButton OnClick="@DeleteTenantAsync">@L["Delete"]</MudButton>
    </DialogActions>
</MudDialog>

@code {
}

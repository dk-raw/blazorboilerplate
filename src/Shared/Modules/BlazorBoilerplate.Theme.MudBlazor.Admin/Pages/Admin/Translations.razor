@inherits TranslationsPage
@page "/admin/translations"
@attribute [Authorize(Policies.IsAdmin)]
@layout AdminLayout

@using Blazored.TextEditor

<PageTitle>@L["Translations"]</PageTitle>

@if (localizationRecordKeys == null)
{
    <LoadingBackground>
        <label>@L["Loading"]</label>
    </LoadingBackground>
}
else
{
    <MudTextField ValueChanged="(string filter) => LoadKeys(filter)" AdornmentIcon="@Icons.Filled.Search" />
    <MudTable ServerData="@(new Func<TableState, Task<TableData<LocalizationRecordKey>>>(ServerReload))" Striped="true" Dense="true" Hover="true" SelectedItemChanged="async (LocalizationRecordKey key) => await LoadLocalizationRecords((LocalizationRecordKey)key)">
        <HeaderContent>
            <MudTh><MudButton StartIcon="@Icons.Filled.Add" OnClick="@OpenNewKeyDialogOpen">@L["NewTranslation"]</MudButton></MudTh>
            <MudTh>@L["MsgId"]</MudTh>
            <MudTh>@L["ContextId"]</MudTh>
        </HeaderContent>
        <RowTemplate Context="keyRow">
            <MudTd>
                <div>
                    <MudIconButton Icon="@Icons.Filled.Edit" OnClick="@(() => OpenEditDialog(keyRow))"></MudIconButton>
                    <MudIconButton Icon="@Icons.Filled.Delete" OnClick="@(() => OpenDeleteDialog(keyRow))"></MudIconButton>
                </div>
            </MudTd>
            <MudTd>@keyRow.MsgId</MudTd>
            <MudTd>@keyRow.ContextId</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>

    <MudTable Items="@localizationRecords" Striped="true">
        <HeaderContent>
            <MudTh></MudTh>
            <MudTh>@L["Culture"]</MudTh>
            <MudTh style="width: 100%;">@L["Translation"]</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate Context="row">
            <MudTd>
                <div>
                    <MudIconButton Icon="@Icons.Filled.Delete" OnClick="@(() => DeleteLocalizationRecord(row))" Disabled="@(row.Culture == BlazorBoilerplate.Shared.Localizer.Settings.NeutralCulture)"></MudIconButton>
                </div>
            </MudTd>
            <MudTd><b>@row.Culture</b></MudTd>
            <MudTd>
                <MudTextField @bind-Value="@row.Translation" Lines="5" FullWidth="true" Required="true" Style="resize: both"></MudTextField>
            </MudTd>
            <MudTd>
                <div>
                    <MudButton Style="margin-bottom: 5px; white-space: nowrap"  Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => OpenEditAsHtmlDialog(row))">@L["Edit as HTML"]</MudButton>
                    <MudButton Variant="@(row.PluralTranslations.Count == 0 ? Variant.Outlined : Variant.Filled)" OnClick="@(() => OpenPluralDialog(row))">@L["Plural"]</MudButton>
                </div>
            </MudTd>
        </RowTemplate>
    </MudTable>
    @if (LocalizationCultures.Count > 0)
    {<EditForm Model="@newLocalizationRecord" OnValidSubmit="@SaveNewLocalizationRecord">
            <FluentValidationValidator />
            <ValidationSummary />
            <MudSelect @bind-Value="@newLocalizationRecord.Culture" Items="@LocalizationCultures" Label=@L["Culture"]></MudSelect>
            <MudTextField @bind-Value="@newLocalizationRecord.Translation" Label=@L["Translation"] FullWidth="true" Lines="5" Style="resize: both"></MudTextField>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@L["Add"]</MudButton>
            <MudButton OnClick="@(() => OpenEditAsHtmlDialog(newLocalizationRecord))" Variant="Variant.Filled" Color="Color.Primary">@L["Edit as HTML"]</MudButton>
        </EditForm>}

    <MudButton OnClick="@CancelChanges">@L["Cancel"]</MudButton>
    <MudButton OnClick="@SaveChanges" Variant="Variant.Filled" Color="Color.Primary">@L["Save"]</MudButton>
    <MudButton OnClick="@ReloadTranslations" Variant="Variant.Filled" Color="Color.Primary">@L["ReloadTranslations"]</MudButton>
    <div>
        <MudButton Style="margin-top: 5px" OnClick="@(e => { navigationManager.NavigateTo("/api/localization/export", true); })" Variant="Variant.Filled" Color="Color.Primary">@L["Export"]</MudButton>

        <InputFile id="fileInput" OnChange="UploadFiles" hidden multiple />

        <MudButton HtmlTag="label"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   StartIcon="@Icons.Filled.CloudUpload"
                   for="fileInput">
            @L["Import PO file"]
        </MudButton>
    </div>

    <MudDialog @bind-IsVisible="@isEditDialogOpen">
        <TitleContent>@L["Edit {0}", currentKey]</TitleContent>
        <DialogContent>
            <div class="form-group">
                <MudTextField @bind-Value="@newKey.ContextId" Label=@L["ContextId"] AdornmentIcon="@Icons.Filled.VpnKey" Adornment="Adornment.End" FullWidth="true" Required="true"></MudTextField>
            </div>
            <div class="form-group">
                <MudTextField @bind-Value="@newKey.MsgId" Label=@L["MsgId"] AdornmentIcon="@Icons.Filled.VpnKey" Adornment="Adornment.End" FullWidth="true" Required="true"></MudTextField>
            </div>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@(e => { isEditDialogOpen = false; })">@L["Cancel"]</MudButton>
            <MudButton OnClick="@(()=>EditLocalizationRecordKey())" Variant="Variant.Filled" Color="Color.Primary">@L["Save"]</MudButton>
        </DialogActions>
    </MudDialog>

    <MudDialog @bind-IsVisible="@isDeleteDialogOpen">
        <TitleContent><MudIcon Icon="@Icons.Filled.Warning"></MudIcon> @L["Confirm Delete"]</TitleContent>
        <DialogContent>
            @L["Are you sure you want to delete {0}?", currentKey]
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@(e => { isDeleteDialogOpen = false; })">@L["Cancel"]</MudButton>
            <MudButton OnClick="@(()=>DeleteLocalizationRecordKey(currentKey))">@L["Delete"]</MudButton>
        </DialogActions>
    </MudDialog>

    <MudDialog @bind-IsVisible="@isNewKeyDialogOpen">
        <TitleContent>@L["NewTranslation"]</TitleContent>
        <DialogContent>
            <EditForm id="newKeyForm" Model="@newLocalizationRecord" OnValidSubmit="@SaveNewKey">
                <FluentValidationValidator />
                <ValidationSummary />
                <fieldset>
                    <div class="form-group">
                        <MudTextField @bind-Value="@newLocalizationRecord.ContextId" Label=@L["ContextId"] AdornmentIcon="@Icons.Filled.VpnKey" Adornment="Adornment.End" FullWidth="true" Required="true"></MudTextField>
                    </div>
                    <div class="form-group">
                        <MudTextField @bind-Value="@newLocalizationRecord.MsgId" Label=@L["MsgId"] AdornmentIcon="@Icons.Filled.VpnKey" Adornment="Adornment.End" FullWidth="true" Required="true"></MudTextField>
                    </div>
                    <div class="form-group">
                        <MudTextField @bind-Value="@newLocalizationRecord.Culture" Label=@L["Culture"] AdornmentIcon="@Icons.Filled.Public" Adornment="Adornment.End" FullWidth="true" Required="true" Disabled="true"></MudTextField>
                    </div>
                    <div class="form-group">
                        <MudTextField @bind-Value="@newLocalizationRecord.Translation" Label=@L["Translation"] FullWidth="true" Required="true" Lines="5" Style="resize: both"></MudTextField>
                    </div>
                </fieldset>
            </EditForm>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@CancelChanges">@L["Cancel"]</MudButton>
            <MudButton ButtonType="ButtonType.Submit" form="newKeyForm" Variant="Variant.Filled" Color="Color.Primary">@L["Save"]</MudButton>
        </DialogActions>
    </MudDialog>

    <MudDialog @bind-IsVisible="@isPluralDialogOpen">
        <TitleContent>@L["Plural"]</TitleContent>
        <DialogContent>
            <MudTable Items="@currentLocalizationRecord.PluralTranslations" Striped="true">
                <HeaderContent>
                    <MudTh></MudTh>
                    <MudTh>@L["Index"]</MudTh>
                    <MudTh>@L["Translation"]</MudTh>
                </HeaderContent>
                <RowTemplate Context="row">
                    <MudTd>
                        <div>
                            <MudIconButton Icon="@Icons.Filled.Delete" OnClick="@(() => DeletePluralTranslation(row))"></MudIconButton>
                        </div>
                    </MudTd>
                    <MudTd>
                        <MudTextField @bind-Value="@row.Index" Lines="5" FullWidth="true" Required="true"></MudTextField>
                    </MudTd>
                    <MudTd>
                        <MudTextField @bind-Value="@row.Translation" Lines="5" FullWidth="true" Required="true" Style="resize: both"></MudTextField>
                    </MudTd>
                </RowTemplate>
            </MudTable>
            @if (PluralFormRules[currentLocalizationRecord.Culture].Count > currentLocalizationRecord.PluralTranslations.Count)
            {<EditForm Model="@newPlural" OnValidSubmit="@SaveNewPlural">
                    <FluentValidationValidator />
                    <ValidationSummary />
                    <fieldset>
                        <div class="form-group">
                            <MudTextField @bind-Value="@newPlural.Index" Label=@L["Index"] FullWidth="true"></MudTextField>
                            <MudTextField @bind-Value="@newPlural.Translation" Label=@L["Translation"] FullWidth="true" Lines="5" Style="resize: both"></MudTextField>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@L["Add"]</MudButton>
                        </div>
                    </fieldset>
                </EditForm>}
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@CancelPluralChanges">@L["Cancel"]</MudButton>
            <MudButton OnClick="@SavePluralChanges" Variant="Variant.Filled" Color="Color.Primary">@L["Save"]</MudButton>
        </DialogActions>
    </MudDialog>

    @if (currentLocalizationRecord != null)
    {<MudDialog Id="editashtmldialog" @bind-IsVisible="@isEditAsHtmlDialogOpen">
            <TitleContent>@L["Edit as HTML"]</TitleContent>
            <DialogContent>
                <BlazoredTextEditor @ref="@HtmlEditor">
                    <ToolbarContent>
                        <select class="ql-header">
                            <option selected=""></option>
                            <option value="1"></option>
                            <option value="2"></option>
                            <option value="3"></option>
                            <option value="4"></option>
                            <option value="5"></option>
                        </select>
                        <button class="ql-bold"></button>
                        <button class="ql-italic"></button>
                        <button class="ql-underline"></button>
                        <button class="ql-strike"></button>
                        <select class="ql-color"></select>
                        <button class="ql-list" value="ordered"></button>
                        <button class="ql-list" value="bullet"></button>
                        <select class="ql-align">
                            <option selected=""></option>
                            <option value="center"></option>
                            <option value="right"></option>
                            <option value="justify"></option>
                        </select>
                        <button class="ql-link"></button>
                    </ToolbarContent>
                    <EditorContent>
                    </EditorContent>
                </BlazoredTextEditor>
            </DialogContent>
            <DialogActions>
                <MudButton OnClick="@(e => { isEditAsHtmlDialogOpen = false; })">@L["Cancel"]</MudButton>
                <MudButton OnClick="@(() => SaveLocalizationRecordAsHTML())">@L["Confirm"]</MudButton>
            </DialogActions>
        </MudDialog>}
}

@code {
    BlazoredTextEditor HtmlEditor;

    protected override void SetHTML(string html)
    {
        HtmlEditor.LoadHTMLContent(html);
    }

    protected override Task<string> GetHTML() => HtmlEditor.GetHTML();

    private async Task UploadFiles(InputFileChangeEventArgs e)
    {
        await Upload(e.GetMultipleFiles().Select(e => new FileUploadEntry(e)));
    }

    private async Task<TableData<LocalizationRecordKey>> ServerReload(TableState state)
    {
        await OnPage(state.Page, state.PageSize);

        return new TableData<LocalizationRecordKey>() { TotalItems = totalItemsCount, Items = localizationRecordKeys };
    }
}
